<?php

namespace Peerj\Bundle\SixPackBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use Doctrine\DBAL\Types\Type as DoctrineType;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
use Peerj\Bundle\SixPackBundle\Entity\SixpackUser;

/**
 * SixpackUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SixpackUserRepository extends EntityRepository
{
    /**
     * Finds all clientIds for a user
     *
     * @param $user
     *
     * @return array|null
     */
    public function findAllByUser($user)
    {
        return $this->findAllByUserId($user->getId());
    }

    /**
     * Finds all clientIds for a user
     *
     * @param $user
     *
     * @return array|null
     */
    public function findAllByUserId($userId)
    {
        $query = $this->createQueryBuilder('spu')
                 ->where('spu.user = :user_id')
                 ->setParameter('user_id', $userId)
                 ->getQuery();

        return $query->getResult();
    }

    public function findAllAssociatedClients($clientId)
    {
        $record = $this->findOneBy(array('clientId' => $clientId));

        if (!$record) {
            return null;
        }

        $userId = $record->getUser()->getId();

        return $this->findAllByUserId($userId);
    }
}
